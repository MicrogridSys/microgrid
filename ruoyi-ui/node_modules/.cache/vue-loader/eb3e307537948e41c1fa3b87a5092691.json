{"remainingRequest":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\java\\RuoYi-Cloud\\ruoyi-ui\\src\\views\\microgrid\\statistics\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\src\\views\\microgrid\\statistics\\index.vue","mtime":1690463530076},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681828569330},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1681828569960},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681828569330},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1681828570219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/microgrid/statistics","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"title-container\">\n      <h1 class=\"title\">微电网日前优化调度决策结果报表</h1>\n    </div>\n      <div class=\"echart\" id=\"mychart\" :style=\"myChartStyle\"></div>\n    <el-divider /><!-- 分割线 -->\n    <h1 class=\"title\">调度执行记录</h1>\n    <el-table v-loading=\"loading\" :data=\"tableData\" @selection-change=\"handleSelectionChange\">\n      <el-table-column label=\"序号\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.$index + 1 }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"发电机\" align=\"center\" prop=\"Generator\" />\n      <el-table-column label=\"调度功率/kw\" align=\"center\" prop=\"Dispatched Power\" />\n      <el-table-column label=\"目标功率/kw\" align=\"center\" prop=\"Target Power\" />\n      <el-table-column label=\"调度结果\" align=\"center\" prop=\"Dispatch Result\" />\n      <el-table-column label=\"备注\" align=\"center\" prop=\"Remarks\" width=\"220\" />\n      <el-table-column label=\"调度时间\" align=\"center\" prop=\"date\" width=\"180\">\n        <!-- <template slot-scope=\"scope\">\n            <span>{{ parseTime(scope.row.timestamp, '{y}-{m}-{d}') }}</span>\n          </template> -->\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['microgrid:history:edit']\">修改</el-button>\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['microgrid:history:remove']\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- <pagination v-show=\"total > 0\" :total=\"total\" :page.sync=\"queryParams.pageNum\" :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getGenList\" /> -->\n    <pagination v-show=\"total > 0\" :total=\"total\" :page.sync=\"queryParams.pageNum\" :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getGenList\" />\n\n    <!-- 添加或修改发电机数据表对话框 -->\n    <!-- <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n          <el-form-item label=\"终端外键\" prop=\"terminalNo\">\n            <el-input v-model=\"form.terminalNo\" placeholder=\"请输入终端外键\" />\n          </el-form-item>\n          <el-form-item label=\"时间戳\" prop=\"timestamp\">\n            <el-date-picker clearable\n              v-model=\"form.timestamp\"\n              type=\"date\"\n              value-format=\"yyyy-MM-dd\"\n              placeholder=\"请选择时间戳\">\n            </el-date-picker>\n          </el-form-item>\n          <el-form-item label=\"电流\" prop=\"genCurrent\">\n            <el-input v-model=\"form.genCurrent\" placeholder=\"请输入电流\" />\n          </el-form-item>\n          <el-form-item label=\"电压\" prop=\"genVoltage\">\n            <el-input v-model=\"form.genVoltage\" placeholder=\"请输入电压\" />\n          </el-form-item>\n          <el-form-item label=\"功率\" prop=\"genPower\">\n            <el-input v-model=\"form.genPower\" placeholder=\"请输入功率\" />\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n          <el-button @click=\"cancel\">取 消</el-button>\n        </div>\n      </el-dialog> -->\n  </div>\n</template>\n\n<script>\nimport { listHistory, getHistory, delHistory, addHistory, updateHistory } from \"@/api/microgrid/history\";\nimport * as echarts from \"echarts\";\n\n\nexport default {\n  name: \"History\",\n  data() {\n    return {\n\n      myChart: {},\n      myChartStyle: {\n        width: \"100%\",\n        height: \"400px\"\n      },\n      xAxisData: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"],\n      netLoadData: [\n        1240.73, 1410.65, 1570.35, 1690.34, 1760.12, 1690.34, 1630.98, 1560.87, 1460.56, 1350.57, 1250.67, 1240.73,\n        1250.67, 1350.57, 1420.12, 1580.32, 2010.34, 1890.53, 1780.55, 1680.24, 1460.56, 1330.67, 1240.73, 1230.65\n      ],\n      exchangeData: [\n        1050.45, 1050.35, 1050.76, 1050.34, 1030.65, 1000.24, 1000.35, 1000.56, 900.45, 850.34, 850.34, 850.67,\n        840.34, 840.23, 250.76, 500.34, 600.65, 900.68, 900.86, 400.23, 100.55, 0, 1000.45, 900.45\n      ],\n      unit2Data: [\n        0, 0, 60.35, 180, 180, 60, 140, 140, 100, 80, 0, 0,\n        0, 60.69, 200.24, 250.56, 620.65, 480.65, 440.75, 290.45, 380.65, 360.34, 0, 0\n      ],\n      energyStorageData: [\n        0, 0, 0, 0, 80.34, 160.28, 40.64, 0, 0, 0, 0, 0,\n        0, 0, 500.32, 380.23, 380.64, 60.32, 0, 500.32, 500.89, 480.01, 0, 0\n      ],\n      unit4Data: [\n        500.45, 480.23, 470.78, 470.75, 460.78, 450.93, 450.98, 450.92, 460.23, 450.85, 440.89, 440.70,\n        450.26, 460.63, 470.93, 470.95, 470.62, 470.92, 470.72, 470.32, 470.67, 480.78, 470.86, 470.23\n      ],\n\n\n\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 发电机数据表表格数据\n      historyList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 12,\n        terminalNo: \"gen\",\n        timestamp: null,\n        genCurrent: null,\n        genVoltage: null,\n        genPower: null\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n      },\n      options: [  // 选择器选项的数据源\n        { label: '发电机启动', value: 'wind' },\n        { label: '发电机停机', value: 'pv' },\n        { label: '处理故障', value: 'handle' },\n        { label: '调度处理', value: 'diaodu' },\n        { label: '调节功率', value: 'power' },\n        { label: '设备检修', value: 'jianxiu' }\n      ],\n      showGen: true,\n      showPv: false,\n      showWind: false,\n      showEnergy: false,\n      showMg: false,\n      showLoad: false,\n      tableData: [\n\n        { Generator: 'gen_001', date: '2023-05-01 08:00:00', 'Dispatched Power': 50, 'Target Power': 45, 'Dispatch Result': '成功', Remarks: '针对峰值负荷进行调节' },\n        { Generator: 'gen_002', date: '2023-05-01 10:30:00', 'Dispatched Power': 75, 'Target Power': 80, 'Dispatch Result': '成功', Remarks: '提供紧急备用电力' },\n        { Generator: 'energy_001', date: '2023-05-01 08:00:00', 'Dispatched Power': 90, 'Target Power': 100, 'Dispatch Result': '成功', Remarks: '调整储能电池' },\n        { Generator: 'mg_001', date: '2023-05-01 08:00:00', 'Dispatched Power': 65, 'Target Power': 70, 'Dispatch Result': '成功', Remarks: '平衡供需关系' },\n\n        { Generator: 'gen_001', date: '2023-05-02 08:00:00', 'Dispatched Power': 40, 'Target Power': 40, 'Dispatch Result': '成功', Remarks: '优化发电组合' },\n        { Generator: 'gen_002', date: '2023-05-02 08:00:00', 'Dispatched Power': 50, 'Target Power': 50, 'Dispatch Result': '成功', Remarks: '提供紧急备用电力' },\n        { Generator: 'energy_001', date: '2023-05-02 08:00:00', 'Dispatched Power': 40, 'Target Power': 35, 'Dispatch Result': '成功', Remarks: '平衡电网负荷的峰谷差异' },\n        { Generator: 'mg_001', date: '2023-05-02 08:00:00', 'Dispatched Power': 95, 'Target Power': 100, 'Dispatch Result': '成功', Remarks: '调节太阳能波动' },\n\n        { Generator: 'gen_001', date: '2023-05-03 08:00:00', 'Dispatched Power': 40, 'Target Power': 40, 'Dispatch Result': '成功', Remarks: '提供基础负荷' },\n        { Generator: 'gen_002', date: '2023-05-03 08:00:00', 'Dispatched Power': 40, 'Target Power': 40, 'Dispatch Result': '成功', Remarks: '提供紧急备用电力' },\n        // { Generator: 'energy_001', date: '2023-05-03 08:00:00', 'Dispatched Power': 75, 'Target Power': 80, 'Dispatch Result': '成功', Remarks: '满足峰值需求' },\n        // { Generator: 'mg_001', date: '2023-05-03 08:00:00', 'Dispatched Power': 90, 'Target Power': 90, 'Dispatch Result': '成功', Remarks: '满足增加的需求' }\n\n      ]\n    };\n  },\n  created() {\n    this.getGenList();\n  },\n  mounted() {\n    // this.initDate(); //数据初始化\n    this.drawChart();\n  },\n  methods: {\n    drawChart() {\n      this.myChart = echarts.init(document.getElementById(\"mychart\"));\n\n      // 计算净负荷和四个机组功率的总和\n      const sum = this.netLoadData.reduce((a, b) => a + b, 0) || 0;\n      const max = Math.max(sum, ...this.exchangeData, ...this.unit2Data, ...this.energyStorageData, ...this.unit4Data);\n\n      // 调整净负荷和四个机组功率的数据，使其总和等于最大值\n      const netLoadAdjusted = this.netLoadData.map(value => value + (max - sum));\n      const exchangeAdjusted = this.exchangeData.map(value => value + (max - sum));\n      const unit2Adjusted = this.unit2Data.map(value => value + (max - sum));\n      const energyStorageAdjusted = this.energyStorageData.map(value => value + (max - sum));\n      const unit4Adjusted = this.unit4Data.map(value => value + (max - sum));\n\n\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          },\n          formatter: (params) => {\n            const time = params[0].axisValue; // 横轴时间值\n            let content = time + \"时<br/>\";\n            params.forEach((param) => {\n              const seriesName = param.seriesName; // 系列名称\n              const value = param.value; // 系列值\n              content += seriesName + \": \" + value + \" kW<br/>\";\n            });\n            // content += \"总输出: \" + value + \" kW<br/>\";\n            return content;\n          }\n        },\n        legend: {\n          top: 10,\n          data: [\"净负荷\", \"储能充放电功率\", \"与电网交换功率\", \"发电机1出力\", \"发电机2出力\"]\n        },\n        grid: {\n          top: 80,\n          bottom: 50,\n          left: 70,\n          right: 40\n        },\n        xAxis: {\n          type: \"category\",\n          data: this.xAxisData,\n          axisLabel: {\n            interval: 0,\n            rotate: 45\n          },\n          boundaryGap: false\n        },\n        yAxis: [\n          {\n            type: \"value\",\n            name: \"功率/kw\",\n            axisLine: {\n              show: true\n            },\n            axisTick: {\n              show: true\n            },\n            splitLine: {\n              show: true\n            },\n            min: 0,\n            max: 2500\n          }\n        ],\n        series: [\n          {\n            name: \"净负荷\",\n            type: \"line\",\n            data: netLoadAdjusted,\n            smooth: true,\n            lineStyle: {\n              type: \"dashed\"\n            },\n            yAxisIndex: 0\n          },\n          {\n            name: \"发电机2出力\",\n            type: \"bar\",\n            stack: \"总量\",\n            data: unit2Adjusted,\n            barWidth: \"30%\",\n            itemStyle: {\n              color: '#CEBBDF'\n            }\n          },\n          {\n            name: \"发电机1出力\",\n            type: \"bar\",\n            stack: \"总量\",\n            data: unit4Adjusted,\n            barWidth: \"30%\",\n            itemStyle: {\n              color: '#A8D580'\n            }\n          },\n          {\n            name: \"与电网交换功率\",\n            type: \"bar\",\n            stack: \"总量\",\n            data: exchangeAdjusted,\n            barWidth: \"30%\",\n            itemStyle: {\n              color: '#F7BF7C'\n            }\n          },\n          {\n            name: \"储能充放电功率\",\n            type: \"bar\",\n            stack: \"总量\",\n            data: energyStorageAdjusted,\n            barWidth: \"30%\",\n            itemStyle: {\n              color: '#bddcdc'\n            }\n          }\n        ]\n      };\n\n      this.myChart.setOption(option);\n\n      // Resize chart when window size changes\n      window.addEventListener(\"resize\", () => {\n        this.myChart.resize();\n      });\n    },\n\n\n\n\n    /** 查询发电机数据表列表 */\n    getGenList() {\n      this.loading = true;\n      this.queryParams.terminalNo = \"gen\";\n      listHistory(this.queryParams).then(response => {\n        this.historyList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        terminalNo: null,\n        timestamp: null,\n        genCurrent: null,\n        genVoltage: null,\n        genPower: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getGenList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加发电机数据表\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const id = row.id || this.ids\n      getHistory(id).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"修改发电机数据表\";\n      });\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.id != null) {\n            updateHistory(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getGenList();\n            });\n          } else {\n            addHistory(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getGenList();\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const ids = row.id || this.ids;\n      this.$modal.confirm('是否确认删除发电机数据表编号为\"' + ids + '\"的数据项？').then(function () {\n        return delHistory(ids);\n      }).then(() => {\n        this.getGenList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => { });\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('microgrid/history/export', {\n        ...this.queryParams\n      }, `history_${new Date().getTime()}.xlsx`)\n    }\n  }\n};\n</script>\n<style>\n.echart {\n    margin-top: 20px;\n}\n.title-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100h;\n}\n.title {\n  text-align: center;\n  font-size: 24px;\n  font-weight: bold;\n}\n.chart-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n</style>\n"]}]}