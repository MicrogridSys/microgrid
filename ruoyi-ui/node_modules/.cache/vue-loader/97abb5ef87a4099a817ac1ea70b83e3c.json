{"remainingRequest":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\java\\RuoYi-Cloud\\ruoyi-ui\\src\\views\\microgrid\\callpolice\\realtime.vue?vue&type=style&index=0&id=e593c922&lang=css&","dependencies":[{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\src\\views\\microgrid\\callpolice\\realtime.vue","mtime":1685803498854},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1681828569596},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1681828570476},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1681828569954},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681828569330},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1681828570219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWNoYXJ0IHsNCiAgICBtYXJnaW4tdG9wOiAyMHB4Ow0KfQ0K"},{"version":3,"sources":["realtime.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA","file":"realtime.vue","sourceRoot":"src/views/microgrid/callpolice","sourcesContent":["<template>\r\n    <div class=\"echart\" id=\"mychart\" :style=\"myChartStyle\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            myChart: {},\r\n            myChartStyle: { width: \"66.67%\", height: \"400px\" },\r\n            xAxisData: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"],\r\n            netLoadData: [\r\n                1240.73, 1410.65, 1570.35, 1690.34, 1760.12, 1690.34, 1630.98, 1560.87, 1460.56, 1350.57, 1250.67, 1240.73,\r\n                1250.67, 1350.57, 1420.12, 1580.32, 2010.34, 1890.53, 1780.55, 1680.24, 1460.56, 1330.67, 1240.73, 1230.65\r\n            ],\r\n            exchangeData: [\r\n                1050.45, 1050.35, 1050.76, 1050.34, 1030.65, 1000.24, 1000.35, 1000.56, 900.45, 850.34, 850.34, 850.67,\r\n                840.34, 840.23, 250.76, 500.34, 600.65, 900.68, 900.86, 400.23, 100.55, 0, 1000.45, 900.45\r\n            ],\r\n            unit2Data: [\r\n                0, 0, 60.35, 180, 180, 60, 140, 140, 100, 80, 0, 0,\r\n                0, 60.69, 200.24, 250.56, 620.65, 480.65, 440.75, 290.45, 380.65, 360.34, 0, 0\r\n            ],\r\n            energyStorageData: [\r\n                0, 0, 0, 0, 80.34, 160.28, 40.64, 0, 0, 0, 0, 0,\r\n                0, 0, 500.32, 380.23, 380.64, 60.32, 0, 500.32, 500.89, 480.01, 0, 0\r\n            ],\r\n            unit4Data: [\r\n                500.45, 480.23, 470.78, 470.75, 460.78, 450.93, 450.98, 450.92, 460.23, 450.85, 440.89, 440.70,\r\n                450.26, 460.63, 470.93, 470.95, 470.62, 470.92, 470.72, 470.32, 470.67, 480.78, 470.86, 470.23\r\n            ]\r\n        };\r\n    },\r\n    mounted() {\r\n        this.drawChart();\r\n    },\r\n    methods: {\r\n        drawChart() {\r\n            this.myChart = echarts.init(document.getElementById(\"mychart\"));\r\n\r\n            // 计算净负荷和四个机组功率的总和\r\n            const sum = this.netLoadData.reduce((a, b) => a + b, 0) || 0;\r\n            const max = Math.max(sum, ...this.exchangeData, ...this.unit2Data, ...this.energyStorageData, ...this.unit4Data);\r\n\r\n            // 调整净负荷和四个机组功率的数据，使其总和等于最大值\r\n            const netLoadAdjusted = this.netLoadData.map(value => value + (max - sum));\r\n            const exchangeAdjusted = this.exchangeData.map(value => value + (max - sum));\r\n            const unit2Adjusted = this.unit2Data.map(value => value + (max - sum));\r\n            const energyStorageAdjusted = this.energyStorageData.map(value => value + (max - sum));\r\n            const unit4Adjusted = this.unit4Data.map(value => value + (max - sum));\r\n\r\n\r\n            const option = {\r\n                tooltip: {\r\n                    trigger: \"axis\",\r\n                    axisPointer: {\r\n                        type: \"shadow\"\r\n                    },\r\n                    formatter: (params) => {\r\n                        const time = params[0].axisValue; // 横轴时间值\r\n                        let content = time + \"时<br/>\";\r\n                        params.forEach((param) => {\r\n                            const seriesName = param.seriesName; // 系列名称\r\n                            const value = param.value; // 系列值\r\n                            content += seriesName + \": \" + value + \" kW<br/>\";\r\n                        });\r\n                        // content += \"总输出: \" + value + \" kW<br/>\";\r\n                        return content;\r\n                    }\r\n                },\r\n                legend: {\r\n                    top: 10,\r\n                    data: [\"净负荷\", \"储能充放电功率\", \"与电网交换功率\", \"发电机1出力\" , \"发电机2出力\"]\r\n                },\r\n                grid: {\r\n                    top: 80,\r\n                    bottom: 50,\r\n                    left: 70,\r\n                    right: 40\r\n                },\r\n                xAxis: {\r\n                    type: \"category\",\r\n                    data: this.xAxisData,\r\n                    axisLabel: {\r\n                        interval: 0,\r\n                        rotate: 45\r\n                    },\r\n                    boundaryGap: false\r\n                },\r\n                yAxis: [\r\n                    {\r\n                        type: \"value\",\r\n                        name: \"功率/kw\",\r\n                        axisLine: {\r\n                            show: true\r\n                        },\r\n                        axisTick: {\r\n                            show: true\r\n                        },\r\n                        splitLine: {\r\n                            show: true\r\n                        },\r\n                        min: 0,\r\n                        max: 2500\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: \"净负荷\",\r\n                        type: \"line\",\r\n                        data: netLoadAdjusted,\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            type: \"dashed\"\r\n                        },\r\n                        yAxisIndex: 0\r\n                    },{\r\n                        name: \"发电机2出力\",\r\n                        type: \"bar\",\r\n                        stack: \"总量\",\r\n                        data: unit2Adjusted,\r\n                        barWidth: \"30%\"\r\n                    },\r\n                    {\r\n                        name: \"发电机1出力\",\r\n                        type: \"bar\",\r\n                        stack: \"总量\",\r\n                        data: unit4Adjusted,\r\n                        barWidth: \"30%\"\r\n                    },\r\n                    {\r\n                        name: \"与电网交换功率\",\r\n                        type: \"bar\",\r\n                        stack: \"总量\",\r\n                        data: exchangeAdjusted,\r\n                        barWidth: \"30%\"\r\n                    },\r\n                    {\r\n                        name: \"储能充放电功率\",\r\n                        type: \"bar\",\r\n                        stack: \"总量\",\r\n                        data: energyStorageAdjusted,\r\n                        barWidth: \"30%\"\r\n                    }\r\n                ]\r\n            };\r\n\r\n            this.myChart.setOption(option);\r\n\r\n            // Resize chart when window size changes\r\n            window.addEventListener(\"resize\", () => {\r\n                this.myChart.resize();\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style>\r\n.echart {\r\n    margin-top: 20px;\r\n}\r\n</style>"]}]}