{"remainingRequest":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\java\\RuoYi-Cloud\\ruoyi-ui\\src\\views\\microgrid\\monitoring\\device.vue?vue&type=style&index=0&id=712141e4&scoped=true&lang=scss&","dependencies":[{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\src\\views\\microgrid\\monitoring\\device.vue","mtime":1685885582076},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1681828569596},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1681828570476},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1681828569954},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1681828569321},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681828569330},{"path":"D:\\java\\RuoYi-Cloud\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1681828570219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGV4dCB7DQogIGZvbnQtc2l6ZTogMTRweDsNCiAgdGV4dC1hbGlnbjogcmlnaHQ7DQp9DQoNCi5pdGVtIHsNCiAgbWFyZ2luLWJvdHRvbTogMTJweDsNCn0NCg0KLmNsZWFyZml4OmJlZm9yZSwNCi5jbGVhcmZpeDphZnRlciB7DQogIGRpc3BsYXk6IHRhYmxlOw0KICBjb250ZW50OiAiIjsNCn0NCg0KLmNsZWFyZml4OmFmdGVyIHsNCiAgY2xlYXI6IGJvdGgNCn0NCg0KLmJveC1jYXJkIHsNCiAgd2lkdGg6IDI2MHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjRhZGY3Ow0KICANCn0NCg0KLmRpdi1ib3ggew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LXdyYXA6IHdyYXA7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgbWFyZ2luLXJpZ2h0OiAyMHB4Ow0KfQ0KDQouY2FyZC1rZXkgew0KICBmb250LXNpemU6IDE0cHg7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KfQ0KDQouZGF0YS1oZWFkIHsNCiAgZm9udC1zaXplOiAxNnB4Ow0KICBjb2xvcjogIzE2NGM4MjsNCiAgbWFyZ2luLWJvdHRvbTogNXB4Ow0KfQ0KDQouZGF0YS1jb250ZW50IHsNCiAgY29sb3I6ICNmZmZmZmY7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICBmb250LXNpemU6IDIycHg7DQp9DQoNCi5lZGl0LWJ0biB7DQogIG1hcmdpbi1yaWdodDogM3B4Ow0KICBjb2xvcjogI2ZmZmZmZjsNCn0NCg0KLmVkaXQtYnRuOmhvdmVyIHsNCiAgY29sb3I6ICMxNjRjODI7DQp9DQoNCi5jYXJkLWRpdmlkZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2JiZGZmOw0KICBtYXJnaW4tdG9wOiAxMHB4Ow0KICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KfQ0KLm1haW4tZGF0YXsNCiAgaGVpZ2h0OiA1MTJweDsNCn0NCg=="},{"version":3,"sources":["device.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAscA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"device.vue","sourceRoot":"src/views/microgrid/monitoring","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row>\r\n      <!--设备数据-->\r\n      <el-col :span=\"21\" :xs=\"24\">\r\n        <!-- 搜索 -->\r\n        <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\"\r\n          label-width=\"68px\">\r\n          <el-form-item label=\"设备类型\" prop=\"devType\">\r\n            <el-select v-model=\"queryParams.status\" placeholder=\"请选择设备类型\">\r\n              <el-option v-for=\"option in options1\" :key=\"option.value\" :label=\"option.label\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"设备名\" prop=\"devName\">\r\n            <el-select v-model=\"queryParams.status\" placeholder=\"请选择设备名\" clearable>\r\n              <el-option v-for=\"opt in options_dev\" :key=\"opt.value\" :label=\"opt.label\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">查看</el-button>\r\n            <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row>\r\n      <h2 style=\"color: #2b85df; font-weight: bold;\">10号燃气发电机</h2>\r\n      <el-col :span=\"3\" v-for=\"(value, key) of devData\">\r\n        <el-statistic group-separator=\",\" :precision=\"2\" decimal-separator=\".\" :value=\"value\" :title=\"key\"><template\r\n            slot=\"suffix\" v-if=\"typeof value != 'number'\"> {{ value }} </template></el-statistic>\r\n      </el-col>\r\n    </el-row>\r\n    <el-divider />\r\n\r\n\r\n    <el-row class=\"main-data\">\r\n      <div v-for=\"(value, key) in gensData\" class=\"div-box\">\r\n        <el-card class=\"box-card\" shadow=\"hover\" style=\"border-radius: 10px;\" body-style=\"padding: 10px 15px 10px 15px;\">\r\n          <el-row>\r\n            <el-col :span=\"4\">\r\n              <i class=\"el-icon-picture-outline data-content\"></i>\r\n            </el-col>\r\n            <el-col :span=\"18\" style=\"float:right;\">\r\n              <div class=\"data-head\">{{ key }}</div>\r\n              <div class=\"data-content\">{{ value }}</div>\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <el-divider class=\"card-divider\" />\r\n          <el-row>\r\n            <div style=\"float:right;\">\r\n              <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" class=\"edit-btn\">编辑</el-button>\r\n              <el-button size=\"mini\" type=\"text\" icon=\"el-icon-tickets\" class=\"edit-btn\">历史记录</el-button>\r\n              <el-button size=\"mini\" type=\"text\" icon=\"el-icon-delete\" class=\"edit-btn\">删除</el-button>\r\n            </div>\r\n          </el-row>\r\n\r\n        </el-card>\r\n      </div>\r\n    </el-row>\r\n\r\n    <pagination v-show=\"total > 0\" :total=\"total\" :page.sync=\"queryParams.pageNum\" :limit.sync=\"queryParams.pageSize\"\r\n      @pagination=\"getList\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { listRole, getRole, delRole, addRole, updateRole, dataScope, changeRoleStatus, deptTreeSelect } from \"@/api/system/role\";\r\nimport { treeselect as menuTreeselect, roleMenuTreeselect } from \"@/api/system/menu\";\r\n\r\nexport default {\r\n  name: \"Role\",\r\n  dicts: ['sys_normal_disable'],\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 角色表格数据\r\n      roleList: [],\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 是否显示弹出层（数据权限）\r\n      openDataScope: false,\r\n      menuExpand: false,\r\n      menuNodeAll: false,\r\n      deptExpand: true,\r\n      deptNodeAll: false,\r\n      // 日期范围\r\n      dateRange: [],\r\n      // 数据范围选项\r\n      dataScopeOptions: [\r\n        {\r\n          value: \"1\",\r\n          label: \"全部数据权限\"\r\n        },\r\n        {\r\n          value: \"2\",\r\n          label: \"自定数据权限\"\r\n        },\r\n        {\r\n          value: \"3\",\r\n          label: \"本部门数据权限\"\r\n        },\r\n        {\r\n          value: \"4\",\r\n          label: \"本部门及以下数据权限\"\r\n        },\r\n        {\r\n          value: \"5\",\r\n          label: \"仅本人数据权限\"\r\n        }\r\n      ],\r\n      // 菜单列表\r\n      menuOptions: [],\r\n      // 部门列表\r\n      deptOptions: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        roleName: undefined,\r\n        roleKey: undefined,\r\n        status: undefined\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\"\r\n      },\r\n      // 表单校验\r\n      rules: {\r\n        roleName: [\r\n          { required: true, message: \"角色名称不能为空\", trigger: \"blur\" }\r\n        ],\r\n        roleKey: [\r\n          { required: true, message: \"权限字符不能为空\", trigger: \"blur\" }\r\n        ],\r\n        roleSort: [\r\n          { required: true, message: \"角色顺序不能为空\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      options1: [  // 选择器选项的数据源\r\n        { label: '风力发电设备', value: 'wind' },\r\n        { label: '光伏发电设备', value: 'pv' },\r\n        { label: '储能设备', value: 'energy' },\r\n        { label: '燃机发电设备', value: 'gen' },\r\n      ],\r\n      options_dev: [  // 选择器选项的数据源\r\n        { label: '1号燃气发电机', value: '001' },\r\n        { label: '2号燃气发电机', value: '002' },\r\n        { label: '3号燃气发电机', value: '003' },\r\n        { label: '4号燃气发电机', value: '004' },\r\n        { label: '5号燃气发电机', value: '005' },\r\n        { label: '6号燃气发电机', value: '006' },\r\n        { label: '7号燃气发电机', value: '007' },\r\n        { label: '8号燃气发电机', value: '008' },\r\n        { label: '9号燃气发电机', value: '009' },\r\n        { label: '10号燃气发电机', value: '010' },\r\n      ],\r\n      devData: {\r\n        '日发电量/KWh': 221,\r\n        '总发电量/KWh': 234120,\r\n        '有功功率/KW': 9,\r\n        设备型号: 'KK微燃机',\r\n        设备状态: '运行',\r\n        安装地点: '桂林电子科技大学花江智慧谷2栋',\r\n      },\r\n      gensData: {\r\n        \"电流/A\": 23.04,\r\n        \"电压/V\": 398.21,\r\n        \"功率/W\": 9174.75,\r\n        \"瞬时燃气量/m³\": 2.32,\r\n      },\r\n\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    /** 查询角色列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      listRole(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\r\n        this.roleList = response.rows;\r\n        this.total = response.total;\r\n        this.loading = false;\r\n      }\r\n      );\r\n    },\r\n    /** 查询菜单树结构 */\r\n    getMenuTreeselect() {\r\n      menuTreeselect().then(response => {\r\n        this.menuOptions = response.data;\r\n      });\r\n    },\r\n    // 所有菜单节点数据\r\n    getMenuAllCheckedKeys() {\r\n      // 目前被选中的菜单节点\r\n      let checkedKeys = this.$refs.menu.getCheckedKeys();\r\n      // 半选中的菜单节点\r\n      let halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys();\r\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\r\n      return checkedKeys;\r\n    },\r\n    // 所有部门节点数据\r\n    getDeptAllCheckedKeys() {\r\n      // 目前被选中的部门节点\r\n      let checkedKeys = this.$refs.dept.getCheckedKeys();\r\n      // 半选中的部门节点\r\n      let halfCheckedKeys = this.$refs.dept.getHalfCheckedKeys();\r\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\r\n      return checkedKeys;\r\n    },\r\n    /** 根据角色ID查询菜单树结构 */\r\n    getRoleMenuTreeselect(roleId) {\r\n      return roleMenuTreeselect(roleId).then(response => {\r\n        this.menuOptions = response.menus;\r\n        return response;\r\n      });\r\n    },\r\n    /** 根据角色ID查询部门树结构 */\r\n    getDeptTree(roleId) {\r\n      return deptTreeSelect(roleId).then(response => {\r\n        this.deptOptions = response.depts;\r\n        return response;\r\n      });\r\n    },\r\n    // 角色状态修改\r\n    handleStatusChange(row) {\r\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\r\n      this.$modal.confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗？').then(function () {\r\n        return changeRoleStatus(row.roleId, row.status);\r\n      }).then(() => {\r\n        this.$modal.msgSuccess(text + \"成功\");\r\n      }).catch(function () {\r\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\r\n      });\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 取消按钮（数据权限）\r\n    cancelDataScope() {\r\n      this.openDataScope = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      if (this.$refs.menu != undefined) {\r\n        this.$refs.menu.setCheckedKeys([]);\r\n      }\r\n      this.menuExpand = false,\r\n        this.menuNodeAll = false,\r\n        this.deptExpand = true,\r\n        this.deptNodeAll = false,\r\n        this.form = {\r\n          roleId: undefined,\r\n          roleName: undefined,\r\n          roleKey: undefined,\r\n          roleSort: 0,\r\n          status: \"0\",\r\n          menuIds: [],\r\n          deptIds: [],\r\n          menuCheckStrictly: true,\r\n          deptCheckStrictly: true,\r\n          remark: undefined\r\n        };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.dateRange = [];\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.roleId)\r\n      this.single = selection.length != 1\r\n      this.multiple = !selection.length\r\n    },\r\n    // 更多操作触发\r\n    handleCommand(command, row) {\r\n      switch (command) {\r\n        case \"handleDataScope\":\r\n          this.handleDataScope(row);\r\n          break;\r\n        case \"handleAuthUser\":\r\n          this.handleAuthUser(row);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    // 树权限（展开/折叠）\r\n    handleCheckedTreeExpand(value, type) {\r\n      if (type == 'menu') {\r\n        let treeList = this.menuOptions;\r\n        for (let i = 0; i < treeList.length; i++) {\r\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\r\n        }\r\n      } else if (type == 'dept') {\r\n        let treeList = this.deptOptions;\r\n        for (let i = 0; i < treeList.length; i++) {\r\n          this.$refs.dept.store.nodesMap[treeList[i].id].expanded = value;\r\n        }\r\n      }\r\n    },\r\n    // 树权限（全选/全不选）\r\n    handleCheckedTreeNodeAll(value, type) {\r\n      if (type == 'menu') {\r\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions : []);\r\n      } else if (type == 'dept') {\r\n        this.$refs.dept.setCheckedNodes(value ? this.deptOptions : []);\r\n      }\r\n    },\r\n    // 树权限（父子联动）\r\n    handleCheckedTreeConnect(value, type) {\r\n      if (type == 'menu') {\r\n        this.form.menuCheckStrictly = value ? true : false;\r\n      } else if (type == 'dept') {\r\n        this.form.deptCheckStrictly = value ? true : false;\r\n      }\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset();\r\n      this.getMenuTreeselect();\r\n      this.open = true;\r\n      this.title = \"添加角色\";\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      const roleId = row.roleId || this.ids\r\n      const roleMenu = this.getRoleMenuTreeselect(roleId);\r\n      getRole(roleId).then(response => {\r\n        this.form = response.data;\r\n        this.open = true;\r\n        this.$nextTick(() => {\r\n          roleMenu.then(res => {\r\n            let checkedKeys = res.checkedKeys\r\n            checkedKeys.forEach((v) => {\r\n              this.$nextTick(() => {\r\n                this.$refs.menu.setChecked(v, true, false);\r\n              })\r\n            })\r\n          });\r\n        });\r\n        this.title = \"修改角色\";\r\n      });\r\n    },\r\n    /** 选择角色权限范围触发 */\r\n    dataScopeSelectChange(value) {\r\n      if (value !== '2') {\r\n        this.$refs.dept.setCheckedKeys([]);\r\n      }\r\n    },\r\n    /** 分配数据权限操作 */\r\n    handleDataScope(row) {\r\n      this.reset();\r\n      const deptTreeSelect = this.getDeptTree(row.roleId);\r\n      getRole(row.roleId).then(response => {\r\n        this.form = response.data;\r\n        this.openDataScope = true;\r\n        this.$nextTick(() => {\r\n          deptTreeSelect.then(res => {\r\n            this.$refs.dept.setCheckedKeys(res.checkedKeys);\r\n          });\r\n        });\r\n        this.title = \"分配数据权限\";\r\n      });\r\n    },\r\n    /** 分配用户操作 */\r\n    handleAuthUser: function (row) {\r\n      const roleId = row.roleId;\r\n      this.$router.push(\"/system/role-auth/user/\" + roleId);\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm: function () {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.roleId != undefined) {\r\n            this.form.menuIds = this.getMenuAllCheckedKeys();\r\n            updateRole(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          } else {\r\n            this.form.menuIds = this.getMenuAllCheckedKeys();\r\n            addRole(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"新增成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 提交按钮（数据权限） */\r\n    submitDataScope: function () {\r\n      if (this.form.roleId != undefined) {\r\n        this.form.deptIds = this.getDeptAllCheckedKeys();\r\n        dataScope(this.form).then(response => {\r\n          this.$modal.msgSuccess(\"修改成功\");\r\n          this.openDataScope = false;\r\n          this.getList();\r\n        });\r\n      }\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const roleIds = row.roleId || this.ids;\r\n      this.$modal.confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项？').then(function () {\r\n        return delRole(roleIds);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => { });\r\n    },\r\n    /** 导出按钮操作 */\r\n    handleExport() {\r\n      this.download('system/role/export', {\r\n        ...this.queryParams\r\n      }, `role_${new Date().getTime()}.xlsx`)\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.text {\r\n  font-size: 14px;\r\n  text-align: right;\r\n}\r\n\r\n.item {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n\r\n.clearfix:after {\r\n  clear: both\r\n}\r\n\r\n.box-card {\r\n  width: 260px;\r\n  background-color: #64adf7;\r\n  \r\n}\r\n\r\n.div-box {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  display: inline-block;\r\n  margin-right: 20px;\r\n}\r\n\r\n.card-key {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.data-head {\r\n  font-size: 16px;\r\n  color: #164c82;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.data-content {\r\n  color: #ffffff;\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n}\r\n\r\n.edit-btn {\r\n  margin-right: 3px;\r\n  color: #ffffff;\r\n}\r\n\r\n.edit-btn:hover {\r\n  color: #164c82;\r\n}\r\n\r\n.card-divider {\r\n  background-color: #7bbdff;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n.main-data{\r\n  height: 512px;\r\n}\r\n</style>"]}]}